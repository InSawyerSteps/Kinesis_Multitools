[{"path": "math_operations.py", "content": "\"\"\"\nThis module provides basic mathematical operations.\n\"\"\"\n\ndef add(a: float, b: float) -> float:\n    \"\"\"Add two numbers together.\"\"\"\n    return a + b\n\ndef multiply(a: float, b: float) -> float:\n    \"\"\"Multiply two numbers together.\"\"\"\n    return a * b\n\nclass Calculator:\n    \"\"\"A simple calculator class.\"\"\"\n    \n    def __init__(self, initial_value: float = 0):\n        self.value = initial_value\n    \n    def add(self, x: float) -> 'Calculator':\n        \"\"\"Add a number to the current value.\"\"\"\n        self."}, {"path": "math_operations.py", "content": ":\n        \"\"\"Add a number to the current value.\"\"\"\n        self.value += x\n        return self\n    \n    def multiply(self, x: float) -> 'Calculator':\n        \"\"\"Multiply the current value by a number.\"\"\"\n        self.value *= x\n        return self\n    \n    def get_value(self) -> float:\n        \"\"\"Get the current value.\"\"\"\n        return self.value\n"}, {"path": "string_utils.py", "content": "\"\"\"\nThis module provides string manipulation utilities.\n\"\"\"\n\ndef reverse_string(s: str) -> str:\n    \"\"\"Reverse the input string.\"\"\"\n    return s[::-1]\n\ndef count_vowels(s: str) -> int:\n    \"\"\"Count the number of vowels in a string.\"\"\"\n    vowels = 'aeiouAEIOU'\n    return sum(1 for char in s if char in vowels)\n\nclass StringProcessor:\n    \"\"\"A class for processing strings with various operations.\"\"\"\n    \n    def __init__(self, text: str = \"\"):\n        self.text = text\n    \n    def to_uppercase(self) -> 'Strin"}, {"path": "string_utils.py", "content": "      self.text = text\n    \n    def to_uppercase(self) -> 'StringProcessor':\n        \"\"\"Convert the text to uppercase.\"\"\"\n        self.text = self.text.upper()\n        return self\n    \n    def remove_whitespace(self) -> 'StringProcessor':\n        \"\"\"Remove all whitespace from the text.\"\"\"\n        self.text = ''.join(self.text.split())\n        return self\n    \n    def get_result(self) -> str:\n        \"\"\"Get the processed text result.\"\"\"\n        return self.text\n"}, {"path": "string_utils.py", "content": "return self.text\n"}]